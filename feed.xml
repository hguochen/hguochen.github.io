<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
                <title>GuoChen&#39;s Blog</title>
                <description>A glimpse of my life, my passion and my thoughts.</description>
                <link>http://blog.hguochen.com</link>
                <atom:link href="http://blog.hguochen.com/feed.xml" rel="self" type="application/rss+xml" />
                
                        <item>
                                <title>My H1B1 experience</title>
                                <description>&lt;p&gt;I would like to share my H1B1(US work visa) application experience now that i&amp;rsquo;ve landed myself a work visa in California as a software engineer. I&amp;rsquo;m a Singapore citizen and have not previously been to USA except for a prior business/vacation trip in May 2014. The entire application, from the point i signed the employment offer letter to my flight departure, took about 1 month in total. Which is a pretty fast process.&lt;/p&gt;

&lt;p&gt;During my application, &lt;a href=&quot;http://christinang89.quora.com/5-steps-to-file-for-H-1B1-Singapore-Visa-yourself&quot;&gt;Christina&amp;rsquo;s quora post&lt;/a&gt; on filing for H1B1 visa yourself helped me alot and i would strongly recommend anyone with a interest in H1B1 to take a look. Otherwise, the &lt;a href=&quot;http://www.ustraveldocs.com/sg/sg-niv-typeh1b1.asp&quot;&gt;official visa application website&lt;/a&gt; helps as well, just not as structured.&lt;/p&gt;

&lt;h3&gt;1. Employer files for LCA&lt;/h3&gt;

&lt;p&gt;Right after i signed the employment letter. I was asked to submit the following documents to the company:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;softcopy of passport&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;graduation certificate&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;education transcript&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It took about 7 days before the company got back to me with an approved Labour Condition Certification(LCA), aka, ETA 9035 or 9035E. For employers, you can file for the LCA via the &lt;a href=&quot;http://icert.doleta.gov/&quot;&gt;iCERT portal&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;2. Visa fee payment&lt;/h3&gt;

&lt;p&gt;Right after getting the LCA certification, i went about making payments for the visa fee. You can check your visa application fee &lt;a href=&quot;http://www.ustraveldocs.com/sg/sg-niv-visafeeinfo.asp&quot;&gt;here&lt;/a&gt;, H1B1 is 247SGD(190 USD).&lt;/p&gt;

&lt;p&gt;As i didn&amp;rsquo;t have a standard chartered bank account, which is required for online transaction, i have to make a trip to one of its branches and pay by cash. After payment at the counter, you will receive a receipt stating a receipt number. This receipt number will be required for applying DS-160.&lt;/p&gt;

&lt;h3&gt;3. Application for non-immigrant visa, DS-160&lt;/h3&gt;

&lt;p&gt;With the LCA approval form. i started applying for the non-immigrant visa, &lt;a href=&quot;http://www.ustraveldocs.com/sg/sg-niv-ds160info.asp&quot;&gt;DS-160&lt;/a&gt;. You must complete the &lt;a href=&quot;https://ceac.state.gov/GenNIV/Default.aspx&quot;&gt;DS-160 form&lt;/a&gt; either by yourself or a US attorney representing you. The entire form takes me about 1 hour to fill up. I finished the application in one sitting but you are allowed to save your progress and resume later on the site. Once submitted. You will have to register an account with the &lt;a href=&quot;https://cgifederal.secure.force.com/?language=English&amp;amp;country=Singapore&quot;&gt;visa application system&lt;/a&gt; in order to book an interview appointment. I was lucky enough to be able to book an appointment just 1 day before the interview itself. I chose the 9.15am slot on friday. I&amp;rsquo;ve told the average waiting time for a visa interview is 1 week. By this time, 2 weeks has gone by since i started my application.&lt;/p&gt;

&lt;h3&gt;4. Visa interview&lt;/h3&gt;

&lt;p&gt;I arrived at the US embassy at 8.45am on friday, 30 minutes before the scheduled time. Note that the scheduled time is the time to arrival at the embassy gate, NOT your actual interview time.&lt;/p&gt;

&lt;p&gt;I brought the folllowing documents for the interview:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Passport(very important. will be retained by embassy and mailed back if your application is successful)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LCA approval form&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DS-160 confirmation form&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Resume&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Graduation certificate and transcript&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Signed employment offer letter from employer&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bank statement&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Both parent&amp;rsquo;s photocopy of IC&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Passport sized photograph&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Visa payment receipt&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The security check at the embassy gate will pretty much confiscate anything electronic and issue you a number for retrieval later. It&amp;rsquo;s best to put all your documents in a large envelope and go to embassy with that only.&lt;/p&gt;

&lt;p&gt;Once inside the embassy, you are to get a queue number with the visa application office and wait for your turn. There will be 3 steps in total, which means you number will be called 3 times. Note that numbers may not be called in sequence.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;At first call, you are to submit your DS-160 form, passport and passport photo over the counter. I had to retake a passport picture there as they rejected my original photo saying it&amp;rsquo;s not recent. Taking a passport photo there itself costs 10SGD.&lt;/li&gt;
&lt;li&gt;Second call to the counter will have all your fingerprints scanned and a phamplet will be given to you detailing your rights as a foreign employee in US. Basically it says you will have equality rights enjoyed by americans and you should report any mistreatment/exploitation etc.&lt;/li&gt;
&lt;li&gt;Lastly, the interview itself. The immigration officer looked through my documents and asked 3 questions in total: What does the company do? What is your role in the company? Where are you staying in the US?&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;They didn&amp;rsquo;t even ask questions pertaining immigration intents. I guess the above documents i prepared was comprehensive enough for the officer to form an opinion of me.&lt;/p&gt;

&lt;p&gt;The whole interview took about 5minutes. At the end of the interview, he told me my visa is approved and they will take and mail back my passport in 3 working days.&lt;/p&gt;

&lt;h3&gt;5. Flight booking&lt;/h3&gt;

&lt;p&gt;Right after the interview, i informed my to-be-employer of visa success status and decided on a flight departure date. They were very nice to sponsor my flight booked it for me so i didn&amp;rsquo;t have to care much about it.&lt;/p&gt;

&lt;h3&gt;6. NS exit permit&lt;/h3&gt;

&lt;p&gt;I served fulltime national service in Singapore and am required to attend Reservist training every year. In order to leave the country, all Singaporean NSmen must apply for an exit permit before their departure. You can apply for an exit permit &lt;a href=&quot;https://www.ns.sg/nsp/web/esvcs/common/eep/apply?_afrLoop=612071552714999&amp;amp;_afrWindowMode=0&amp;amp;_afrWindowId=2j8z4lluh_1&quot;&gt;here&lt;/a&gt;. The approval is instant so you don&amp;rsquo;t have to wait. But in some cases they will need you to submit supporting documents like your employment offer letter, visa application and flight details.&lt;/p&gt;

&lt;h3&gt;7. Departure Preparations&lt;/h3&gt;

&lt;p&gt;I was previously from the &lt;a href=&quot;http://www.overseas.nus.edu.sg/&quot;&gt;NUS Overseas College(NOC) programme&lt;/a&gt; and they have this programme in california as well. The alumnis of the college in silicon valley actively maintains &lt;a href=&quot;https://ncsv.hackpad.com/README-Welcome-to-SV-Jhkc4Zstjd6&quot;&gt;a set of guide&lt;/a&gt; on what to do post arrival. I find it very informative and answered alot of questions i have with regards to settling down in US.&lt;/p&gt;

&lt;p&gt;In general, i would say my application process was pretty smooth. Thanks to Eric Koh, Christina Ng, Fiona Tay, Susan Aung, Lloyd D&#39;Silva, Elisha Ong, Steven Cheng and many others who have helped me along the way and answered my questions of all sorts.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a list of resources i readup on before and during my visa application:
&lt;a href=&quot;http://www.ustraveldocs.com/sg/sg-niv-visaapply.asp&quot;&gt;http://www.ustraveldocs.com/sg/sg-niv-visaapply.asp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://christinang89.quora.com/5-steps-to-file-for-H-1B1-Singapore-Visa-yourself&quot;&gt;http://christinang89.quora.com/5-steps-to-file-for-H-1B1-Singapore-Visa-yourself&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ceac.state.gov/GenNIV/Default.aspx&quot;&gt;https://ceac.state.gov/GenNIV/Default.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.h1b1.com/practices/h-1b1-visa-for-chileans-singaporeans/&quot;&gt;http://www.h1b1.com/practices/h-1b1-visa-for-chileans-singaporeans/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jasonong.tumblr.com/post/22111385043/us-visa-options-and-my-h1b1-experience&quot;&gt;http://jasonong.tumblr.com/post/22111385043/us-visa-options-and-my-h1b1-experience&lt;/a&gt;&lt;/p&gt;
</description>
                                <pubDate>Sat, 22 Nov 2014 11:04:39 -0800</pubDate>
                                <link>http://blog.hguochen.com//guide/2014/11/22/My-H1B1-experience/</link>
                                <guid isPermaLink="true">http://blog.hguochen.com//guide/2014/11/22/My-H1B1-experience/</guid>
                        </item>
                
                        <item>
                                <title>New macbook</title>
                                <description>&lt;p&gt;Just got a new macbook pro retina 13 inch! Otherwise i&amp;rsquo;m just testing my blog workflow here.&lt;/p&gt;

&lt;p&gt;Move along now.&lt;/p&gt;

&lt;p&gt;PS. Apple always has a way to make you hoard useless device boxes, just because they look gorgeous.&lt;/p&gt;
</description>
                                <pubDate>Sun, 19 Oct 2014 17:40:58 -0700</pubDate>
                                <link>http://blog.hguochen.com//random/2014/10/19/New-macbook/</link>
                                <guid isPermaLink="true">http://blog.hguochen.com//random/2014/10/19/New-macbook/</guid>
                        </item>
                
                        <item>
                                <title>Could this be the most discriminatory Job Description ever?</title>
                                <description>&lt;p&gt;So i just chanced upon what i think is the most discriminatory Job Description(JD) ever. Either the company is trying too hard to be hip or they are simply jerks.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the &lt;a href=&quot;http://careers.wewantsugar.com/jobs/4413-lead-software-engineer-technical-sugar-singapore&quot;&gt;brain numbing JD&lt;/a&gt; by a Singapore startup called &lt;a href=&quot;http://www.wewantsugar.com&quot;&gt;wewantsugar&lt;/a&gt;. Don&amp;rsquo;t be fooled by its name, there&amp;rsquo;s no sweetness whatsoever as far as i can see. Let&amp;rsquo;s go through what&amp;rsquo;s wrong with this piece of golden nugget.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here&amp;rsquo;s what they want:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/Screen_Shot_2014-09-24_at_2_50_00_pm.png&quot; width=&quot;600&quot; alt=&quot;paragraph 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First of all you sidelined majority of Singaporeans whose life inadvertently goes down the path of having kids, buying flat, cars and awaiting CPF withdrawal. So are you implying none of your employees would ever take this path? I&amp;rsquo;d imagine that would be a really scary company to work with.&lt;/p&gt;

&lt;p&gt;Next. The notion of working till midnight is a circumstance of situation, NOT a default choice. We developers never starts off a day telling ourselves &amp;ldquo;damn i&amp;rsquo;m gona make sure i work late into the night.&amp;rdquo; When we do, it&amp;rsquo;s because we are passionate for what we do and we feel responsible enough to finish what we started. How come you never mentioned anything about productivity? What&amp;rsquo;s your reason for wanting someone who willingly want to work late into the night? So that you can work-torture the poor dude and slap a &amp;lsquo;he likes it anyway&amp;rsquo; statement to justify your abuse? That&amp;rsquo;s a really cruel employer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feeling good yet? Here&amp;rsquo;s who they don&amp;rsquo;t want:&lt;/strong&gt;
&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/Screen_Shot_2014-09-24_at_3_22_59_pm.png&quot; width=&quot;600&quot; alt=&quot;paragraph 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just what&amp;rsquo;s with shaming of the corporates by calling them &amp;lsquo;shallow social climber&amp;rsquo;? How does wanting to work for prestigious companies like Goldman Sachs make them shallow? The very organisations you marginalise gave you your bank account, connected your cellphone to your loved ones and makes sure there&amp;rsquo;s food to be bought when you visit NTUCs. Your every statement tells me you despise people who doesn&amp;rsquo;t share your beliefs and dreams while being painfully oblivious to what&amp;rsquo;s around you. Speaking of shallow, this company seems to fit the bill quite well.&lt;/p&gt;

&lt;p&gt;Oh and you don&amp;rsquo;t want social misfits? You don&amp;rsquo;t want people who were always the last to get picked? Sounds like you are the big bad bully in school whom everyone hated. You know what? Some of the most successful technology companies are where they are today because the misfits envisioned something others didn&amp;rsquo;t and built products that made everyone else&amp;rsquo;s life better. But i&amp;rsquo;m glad you didn&amp;rsquo;t see that. Least you ruin the opportunity cost of another genius in the making. By the way, your advice, &amp;lsquo;go seek help from a mental health professional&amp;rsquo; is totally misguided and only goes to show how ugly you are as a person. Misfits do not have a mental condition, this company&amp;rsquo;s management does.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Still Convinced you are perfect for this job? Here&amp;rsquo;s their requirements:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-09-24at31630pm.png&quot; width=&quot;400&quot; alt=&quot;paragraph 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Holy shit! That&amp;rsquo;s even longer than my mum&amp;rsquo;s monthly shopping list. You must be looking to hire &lt;a href=&quot;https://en.wikipedia.org/wiki/Elon_Musk&quot;&gt;Elon Musk&lt;/a&gt; and ready to pay shitloads of salary compensation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/Screen_Shot_2014-09-24_at_3_19_11_pm.png&quot; width=&quot;600&quot; alt=&quot;paragraph 4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Did you know that in &lt;a href=&quot;http://www.mom.gov.sg/employment-practices/fair-employment/Pages/fair-employment.aspx&quot;&gt;Singapore&amp;rsquo;s Ministry of Manpower Employment Act&lt;/a&gt;, it is forbidden to ask potential employees for photographs as a factor of employment considerations? Look like either you need to do more homework or you chose to disregard the employment act totally. Either ways, how can employees even start to trust that you will take care of them?&lt;/p&gt;

&lt;p&gt;Oh look, for a Lead Software Engineer position and all that essential attributes and requirements, you are paying SGD4,000 - 5,000? It&amp;rsquo;s like asking for whales and paying peanuts.&lt;/p&gt;

&lt;p&gt;Those are two full pages of prejudices, discriminatory remarks and statements that shows how ugly this employer can get. I am a software engineer and i would NEVER work for this company ever. I would strongly advise every software engineer to stay clear of your company as well.&lt;/p&gt;

&lt;p&gt;Again, here&amp;rsquo;s the &lt;a href=&quot;http://careers.wewantsugar.com/jobs/4413-lead-software-engineer-technical-sugar-singapore&quot;&gt;brain numbing JD&lt;/a&gt;. Just why isn&amp;rsquo;t there some sort of ethics or personality test before someone is allowed to incorporate a company?&lt;/p&gt;
</description>
                                <pubDate>Wed, 24 Sep 2014 07:13:17 -0700</pubDate>
                                <link>http://blog.hguochen.com//random/2014/09/24/Could-this-be-the-most-discriminatory-Job-Description-ever%3F/</link>
                                <guid isPermaLink="true">http://blog.hguochen.com//random/2014/09/24/Could-this-be-the-most-discriminatory-Job-Description-ever%3F/</guid>
                        </item>
                
                        <item>
                                <title>Redesigning marathonsingapore.com</title>
                                <description>&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/marathonsingapore_redesign.jpg&quot; width=&quot;600&quot; alt=&quot;marathonsingapore redesigned&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;The Situation&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/screencapture-www-marathonsingapore-com.png&quot; width=&quot;400&quot; alt=&quot;Marathonsingapore.com&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.marathonsingapore.com&quot;&gt;Standard Chartered Marathon Singapore&lt;/a&gt; has been around for years and has always been hailed as the golden running event of Singapore. However, for an event with such fame and recognition, its website &lt;a href=&quot;http://www.marathonsingapore.com&quot;&gt;www.marathonsingapore.com&lt;/a&gt; is just really ugly and site navigation is nothing less than complete frustration. The frontpage looks cluttered without any form of information hierarchy. Contents are hidden among a sphagetti of flashy colours. On searching for information, i have to actually resort to googling about the site instead of navigating the site itself. I consider that a failure in content design.&lt;/p&gt;

&lt;p&gt;Ok let&amp;rsquo;s be systematic about its shortcomings. Here are the problems i have identified on the current site design:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Page styles that can be rendered with HTML/CSS are instead done with raw jpg images. Looks like optimization concerns was thrown right out the building from the start.&lt;/li&gt;
&lt;li&gt;A simple inspect element reveals a total of 8 colors used for the frontpage. Some of these colors are neither analogous nor complementary to each other. The resulting visual distraction is appalling.&lt;/li&gt;
&lt;li&gt;Call to Action(CTA) buttons are hidden among less relevant contents.&lt;/li&gt;
&lt;li&gt;Content flow on page are non-hierarchical.&lt;/li&gt;
&lt;li&gt;Site navigation bar are cluttered and information meta-data is a mess.&lt;/li&gt;
&lt;li&gt;Date, Time &amp;amp; Place(DTP) are non obvious at a glance.&lt;/li&gt;
&lt;li&gt;Lack of sitemap to aid user navigation.&lt;/li&gt;
&lt;li&gt;Teaser box contents are prefixed with useless meta-info such as Images, Videos, Highlights etc.&lt;/li&gt;
&lt;li&gt;For a running event, statistics banner information are totally irrelevant. Would the public seriously care about how many bananas or amount of water consumed in a race held last year? Since i&amp;rsquo;m not your logistics officer, i would be more interested in learning how many runners participated in each category don&amp;rsquo;t you think?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-09-11at44030pm.png&quot; width=&quot;600&quot; alt=&quot;statistics banner&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;My Task&lt;/h2&gt;

&lt;p&gt;With the problems identified, my job scope is pretty clear from now on. Here are my design objectives:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Re-introduce a color theme to the site such that it puts the focus on the content.&lt;/li&gt;
&lt;li&gt;Organize the navigation bar that correctly depicts the meta-datas.&lt;/li&gt;
&lt;li&gt;Collate a sitemap to be appended to the footer for easier site navigation.&lt;/li&gt;
&lt;li&gt;Use visual cues to bring out the importance of CTAs.&lt;/li&gt;
&lt;li&gt;Redesign teaser boxes as an entry point to the site&amp;rsquo;s content.&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;Action&lt;/h2&gt;

&lt;h4&gt;Logo and navigation bar&lt;/h4&gt;

&lt;p&gt;Race date, time and venue are probably the 3 most important piece of information for a running event. So we are going to place them right where visitors first sees when visiting our page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-09-11at50832pm.png&quot; width=&quot;600&quot; alt=&quot;top banner&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since there are many race categories for Standard Chartered Marathon, the start times for different races are staggered. In this case, to prevent confusion, we obscure time information from the banner and present them in the event schedule instead.&lt;/p&gt;

&lt;p&gt;Navigation bar is restructured and renamed to correctly identify relevant meta-datas. Some of the less relevant information such as &amp;lsquo;2013 results&amp;rsquo; are demoted from this piece of expensive real estate.&lt;/p&gt;

&lt;p&gt;Before:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-09-11at51610pm.png&quot; width=&quot;600&quot; alt=&quot;navigation bar before&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-09-11at51738pm.png&quot; width=&quot;600&quot; alt=&quot;navigation bar after&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;Carousel section&lt;/h4&gt;

&lt;p&gt;Before:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-09-11at52122pm.png&quot; width=&quot;600&quot; alt=&quot;carousel section before&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-09-11at52134pm.png&quot; width=&quot;600&quot; alt=&quot;carousel section after&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The current carousel section had a bad choice of picture. This contributes to obscuring the importance of CTAs. Instead of choosing pictures, we are going to completely remove pictures as part of carousel theme and introduce a reasonable tagline to supplement the website&amp;rsquo;s agenda.&lt;/p&gt;

&lt;p&gt;Clear CTAs sits just below the tagline to guide users on the appropriate course of action.&lt;/p&gt;

&lt;p&gt;The countdown to race day is a pretty good idea, but it was previously obscured in the right corner of the page. I redesigned and moved the countdown timer to dead center.&lt;/p&gt;

&lt;h4&gt;Teaser boxes&lt;/h4&gt;

&lt;p&gt;Before:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-09-11at53842pm.png&quot; width=&quot;400&quot; alt=&quot;teaser box before&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-09-11at53817pm.png&quot; width=&quot;400&quot; alt=&quot;teaser box after&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The existing teaser section didn&amp;rsquo;t make sense to me. What does &amp;lsquo;IMAGES&amp;rsquo; and &amp;lsquo;VIDEOS&amp;rsquo; section header tell you? I re-worked this section completely to reflect the content groupings of the website. These teasers will serve as entry point to its respective array of contents.&lt;/p&gt;

&lt;h4&gt;Footer and sitemap&lt;/h4&gt;

&lt;p&gt;Before:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-09-11at54535pm.png&quot; width=&quot;600&quot; alt=&quot;footer before&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-09-11at54543pm.png&quot; width=&quot;600&quot; alt=&quot;footer after&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For easier site navigation, i&amp;rsquo;ve added a simple footer that allows users to view the content headers at a glance.&lt;/p&gt;

&lt;h2&gt;Result&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/screencapture-rawgit-com-hguochen-marathon_singapore-master-index-html.png&quot; width=&quot;600&quot; alt=&quot;redesigned marathonsingapore.com&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The static page is hosted &lt;a href=&quot;https://rawgit.com/hguochen/marathon_singapore/master/index.html&quot;&gt;HERE&lt;/a&gt; if you would like to inspect elements and dabble with my design. Otherwise, for the geeks out there, this project also sits on my &lt;a href=&quot;https://github.com/hguochen/marathon_singapore.git&quot;&gt;github repository&lt;/a&gt;. Let me know what you think about my redesign and leave in the comments below!&lt;/p&gt;
</description>
                                <pubDate>Thu, 11 Sep 2014 06:19:34 -0700</pubDate>
                                <link>http://blog.hguochen.com//web%20development/design/frontend/2014/09/11/Redesigning-marathonsingapore.com/</link>
                                <guid isPermaLink="true">http://blog.hguochen.com//web%20development/design/frontend/2014/09/11/Redesigning-marathonsingapore.com/</guid>
                        </item>
                
                        <item>
                                <title>Django environment optimal setup</title>
                                <description>&lt;p&gt;&lt;a href=&quot;https://www.djangoproject.com&quot;&gt;Django&lt;/a&gt; is a great web framework based on MVC architecture that allows you to quickly and correctly build and deploy web projects. However, staring a new Django project can be a little daunting and often the wrong setup can lead to long term problems for your project. Here i&amp;rsquo;m sharing with you my preferred workflow on starting a new Django project. A small bit of planning goes a long way towards making life easier!&lt;/p&gt;

&lt;h3&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;A working knowledge of python language and Django framework is assumed. You will also have to know &lt;a href=&quot;http://git-scm.com&quot;&gt;git&lt;/a&gt; for version control.&lt;/p&gt;

&lt;h3&gt;Install Python&lt;/h3&gt;

&lt;p&gt;Head over to &lt;a href=&quot;http://python.org&quot;&gt;python.org&lt;/a&gt; and find the install instructions for your specific OS. For my development environment, i&amp;rsquo;m running MAC OSX Mavericks.&lt;/p&gt;

&lt;p&gt;To check you have installed python correctly, type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;into terminal command line and you should get the following output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
[GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Install pip&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://pip.readthedocs.org/en/latest/index.html&quot;&gt;Pip&lt;/a&gt; is a great tool for installing and managing python packages. We are going to use pip to install all third party packages to supplement our project.&lt;/p&gt;

&lt;p&gt;The easy way to install pip is to first download &lt;a href=&quot;https://bootstrap.pypa.io/get-pip.py&quot;&gt;get-pip.py&lt;/a&gt;. Then run the following command in the folder with the downloaded file on your terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python get-pip.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And you are done installing! You can test pip installed correctly with the command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip -V
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which shows the version of your pip.&lt;/p&gt;

&lt;h3&gt;Install virtualenv&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://virtualenv.readthedocs.org/en/latest/&quot;&gt;Virutalenv&lt;/a&gt; is a great tool to sandbox your development environments so you don&amp;rsquo;t have to switch back and forth between different versions of softwares. What&amp;rsquo;s more, the excellent extension &lt;a href=&quot;http://virtualenvwrapper.readthedocs.org/en/latest/&quot;&gt;virtualenvwrapper&lt;/a&gt; makes using virtualenv alot easier. This is common, recommend practice among python, Django users alike.&lt;/p&gt;

&lt;p&gt;We are also going to use &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;pip&lt;/a&gt; to install packages.&lt;/p&gt;

&lt;p&gt;First, let&amp;rsquo;s install virtualenv. Note that you can get both virtualenv and virtualenvwrapp install just by install ing virtualenvwrapper.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pip install virtualenvwrapper
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After it&amp;rsquo;s installed, add following lines to your .bashrc file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/directory-you-do-development-in
source /usr/local/bin/virtualenvwrapper.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then type the following command to &amp;lsquo;activate&amp;rsquo; your modified .bashrc file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ source .bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Creating new environment&lt;/h3&gt;

&lt;p&gt;To create a new virtual environment, type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkvirtualenv django_project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;where django_project is whatever name your project is. You should see your shell is now prepended by (django_project).&lt;/p&gt;

&lt;p&gt;The django_project prepending is a reminder that you are using virtualenv instal of your system&amp;rsquo;s Python installation. To exit, the virtual environment, simple type deactivate. When you want to resume work on your project, it&amp;rsquo;s as easy as typing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ workon django_project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where you run the command doesn&amp;rsquo;t matter.&lt;/p&gt;

&lt;h3&gt;Install Django&lt;/h3&gt;

&lt;p&gt;Since we are working in virtualenv, we have to install Django into this virtual environment. This makes sure that the version of Django we use for this project is not confused with other versions used by the system or other virtual environments.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pip install django
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should give you the latest version of Django which will be installed in your virtualenv area. You can confirm this by doing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ which django-admin.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which should point to your $HOME/.virtualenvs/django_project/bin/django-admin.py.&lt;/p&gt;

&lt;h3&gt;Setup project folder&lt;/h3&gt;

&lt;p&gt;Now we can create our project directory. I highly recommend using &lt;a href=&quot;https://github.com/twoscoops/django-twoscoops-project&quot;&gt;two scoops Django&lt;/a&gt; project template for all Django projects. If you are new to two scoops django, it is actually a compilation of some of the best practices for developing Django projects. You can purchase a copy of this amazing book &lt;a href=&quot;http://twoscoopspress.org/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now go ahead and setup the project with this command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ django-admin.py startproject --template=https://github.com/twoscoops/django-twoscoops-project/archive/master.zip --extension=py,rst,html django_project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that this command creates a django_project directory with the two scoops django template. I&amp;rsquo;ll leave you to read more about &lt;a href=&quot;https://github.com/twoscoops/django-twoscoops-project&quot;&gt;two scoops django template&lt;/a&gt; yourself.&lt;/p&gt;

&lt;h3&gt;Source control&lt;/h3&gt;

&lt;p&gt;Git is automatically installed in your virtual environment when you created it with virtualenvwrapper earlier.&lt;/p&gt;

&lt;p&gt;Since our folder and file structure is up now, let&amp;rsquo;s commit them to source control right from the start. Here&amp;rsquo;s how to do that in git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Creates a git repository in the current directory. Now let&amp;rsquo;s stage all of our files to git to be commited.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git add django_project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we commit them to our new repository:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git commit -m &quot;Initial commit of django_project&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s add the remote repository in &lt;a href=&quot;http://github.com&quot;&gt;github&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote add origin &amp;lt;remote repository URL&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, let&amp;rsquo;s push our changes!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;South for database migrations&lt;/h3&gt;

&lt;p&gt;South is a great tool that detects changes to your models layer and automatically sync the changes to your database without you having to dabble with the database itself. This is done through a migration file that South creates. This lets you both migrate the database forward for new change and backward to undo a change or series of changes.&lt;/p&gt;

&lt;p&gt;In our virtualenv, install south using pip:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pip install south
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then setup south with the project by adding it to our INSTALLED_APPS in settings/base.py file for the project.
After which, run the command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# python manage.py syncdb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to sync the changes and south will be registered along with the project. South will also automatically setup the database with the tables it needs.&lt;/p&gt;

&lt;p&gt;Before we commit, we will want tot rack our install Python packages. We want to track the name and version of the python packages we are using so we can recreate our environment easily in the production area. There&amp;rsquo;s a pip command that does this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pip freeze &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I pushed the output of pip freeze to a file called requirements.txt which we will add to source control so we always have an updated list of packages being used.&lt;/p&gt;

&lt;p&gt;As before, we commit the changes to git and push to remote repository.&lt;/p&gt;

&lt;h3&gt;Install Fabric&lt;/h3&gt;

&lt;p&gt;To easily deploy a Django application, we use &lt;a href=&quot;http://fabric.readthedocs.org/en/1.3.3/api/contrib/django.html&quot;&gt;Fabric&lt;/a&gt;. Fabric has a number of purposes but it really helps in quick deployments. Install Fabric with the command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pip install fabric
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fabric expects a fabfile.py which defines all of the actions we can take. Let&amp;rsquo;s create that file and put the following in fabfile.py in your project&amp;rsquo;s root directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from fabric.api import local

def prepare_deployment(branch_name):
local(&#39;python manage.py test django_project&#39;)
local(&#39;git add -p &amp;amp;&amp;amp; git commit&#39;) # or local(&#39;hg add &amp;amp;&amp;amp; hg commit&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will run the test and commit your changes only if your tests pass. A simple &amp;ldquo;pull&amp;rdquo; in your production area becomes your deployment. Let&amp;rsquo;s add the following code to fabfile.py to actually deploy:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from fabric.api import lcd, local

def deploy():
with lcd(&#39;/path/to/my/prod/area/&#39;):

    # With git...
    local(&#39;git pull /my/path/to/dev/area/&#39;)

    # With Mercurial...
    local(&#39;hg pull /my/path/to/dev/area/&#39;)
    local(&#39;hg update&#39;)

    # With both
    local(&#39;python manage.py migrate myapp&#39;)
    local(&#39;python manage.py test myapp&#39;)
    local(&#39;/my/command/to/restart/webserver&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will pull your changes from the development master branch, run any migrations you&amp;rsquo;ve made, run tests, and restart your web server.&lt;/p&gt;

&lt;p&gt;To use this file, we simply type the following in production environment:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ fab prepare_deployment
$ fab deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So that&amp;rsquo;s it! The skeleton for an optimal django environment is setup and ready to be developed! Remember, commit often, test everything. Let me know if i&amp;rsquo;ve missed out something! Rock on folks!&lt;/p&gt;

&lt;p&gt;P/S: For your convenience, i have setup a &lt;a href=&quot;https://github.com/hguochen/django_template&quot;&gt;django_template&lt;/a&gt; on github based on the above instructions. You may wish to fork it for your own use!&lt;/p&gt;

&lt;p&gt;EDIT: Thanks to Chng Nai Yun, i&amp;rsquo;ve corrected a silly error which incorrectly states that git is installed when you install virtualenvwrapper. In reality, git is only installed when you setup the virtualenv environment.&lt;/p&gt;
</description>
                                <pubDate>Tue, 22 Jul 2014 10:08:54 -0700</pubDate>
                                <link>http://blog.hguochen.com//web%20development/2014/07/22/Django-environment-optimal-setup/</link>
                                <guid isPermaLink="true">http://blog.hguochen.com//web%20development/2014/07/22/Django-environment-optimal-setup/</guid>
                        </item>
                
                        <item>
                                <title>[Tip] Python class debugging tools</title>
                                <description>&lt;p&gt;It can be tough trying to debug classes, inherited classes, class methods etc in general. Here&amp;rsquo;s 2 useful debugging utility functions i love to use to sort through the mess.&lt;/p&gt;

&lt;h3&gt;1. Printing attributes and values&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;def print_attr(obj):
    &quot;&quot;&quot;
    Traverses the items in the object&#39;s dictionary and prints each attribute name and its corresponding value.
    &quot;&quot;&quot;
    for attr in obj.__dict__:
        print attr, getattr(obj, attr)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As explained in docstring, function print_attr() takes in an object and spits out each of its attributes and its corresponding value.&lt;/p&gt;

&lt;p&gt;The built-in function getattr() takes an object and an attribute name(as string) and returns the attribute&amp;rsquo;s value.&lt;/p&gt;

&lt;h3&gt;2. Find defining class&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;def find_defining_class(obj, method_name):
&quot;&quot;&quot;
Uses method resolution method(MRO) to get the list of class objects(types) that will be searched for methods.
Return the class to which the method &#39;method_name&#39; belong to.
&quot;&quot;&quot;
for origin in type(obj).mro():
    if method_name in origin.__dict__:
        return origin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Useful if your class belongs to a long chain of super classes and you are trying to find out which class does a particular method belong to. This method works because of &lt;a href=&quot;https://www.python.org/download/releases/2.3/mro/&quot;&gt;Method Resolution Order&lt;/a&gt; rule in python.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s an example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; hand = Hand()
&amp;gt;&amp;gt;&amp;gt; print find_defining_class(hand, &#39;shuffle)
&amp;lt;class &#39;Card.Deck&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So the shuffle method for this Hang object is the one in Deck.&lt;/p&gt;

&lt;p&gt;Hope this 2 utility debugging functions can save you time traversing those pesky bugs. Please share your secret debugging functions too!&lt;/p&gt;

&lt;p&gt;Happy debugging! Ok fine, that&amp;rsquo;s a fallacy&amp;hellip;Don&amp;rsquo;t die debugging!&lt;/p&gt;
</description>
                                <pubDate>Sat, 21 Jun 2014 10:59:42 -0700</pubDate>
                                <link>http://blog.hguochen.com//programming/python/2014/06/21/%5BTip%5D-Python-class-debugging-tools/</link>
                                <guid isPermaLink="true">http://blog.hguochen.com//programming/python/2014/06/21/%5BTip%5D-Python-class-debugging-tools/</guid>
                        </item>
                
                        <item>
                                <title>Prim&#39;s Algorithm</title>
                                <description>&lt;p&gt;Given six cities and the costs(in millions of dollars) of rebuilding roads between them. The road commission has decided to rebuild enough roads so that each pair of cities will be connected, either directly or by going through other cities, by rebuilt roads. Find a minimum cost set of roads meeting its criterion.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/Screenshot2014-06-17004156.png&quot; height=&quot;400&quot; alt=&quot;city roads&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We visited this question previously with &lt;a href=&quot;http://blog.hguochen.com/programming/greedy%20algorithm/2014/06/17/Kruskal%27s-Algorithm/&quot;&gt;Kruskal&amp;rsquo;s Algorithm&lt;/a&gt;. Now let&amp;rsquo;s try a different approach using &lt;a href=&quot;https://en.wikipedia.org/wiki/Prim&#39;s_algorithm&quot;&gt;Prim&amp;rsquo;s Algorithm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Prim&amp;rsquo;s algorithm is another greedy algorithm that finds a minimal spanning tree in a connected, weighted graph. Unlike Kruskal&amp;rsquo;s algorithm, whose partial solutions are not necessarily connected, a partial solution in prim&amp;rsquo;s algorithm is a tree. Prim&amp;rsquo;s algorithm begins with a start vertex and no edges and then applies the greedy rule: Add an edge of minimum weight that has one vertex in the current tree and the other not in the current tree.&lt;/p&gt;

&lt;p&gt;The big idea is to maintain a table that stores each vertex with its corresponding edge weight value adjacent to the starting vertex in question. Additionally, we need an array to store the &amp;lsquo;parent&amp;rsquo; vertex that has access to the vertex in question. We then go about selecting the least weight value in the table and select it as the edge path to pick. The symbol for choosing this edge could be deleting the row entirely from the table. After each edge selection, we update the table with the newly accessible vertex. When there are no more rows left in the table, then we would have selected every edge required  of a minimum spanning tree.&lt;/p&gt;

&lt;p&gt;For the table above, we can use a python dictionary with key as the vertex and value as the edge weight with its &amp;lsquo;parent&amp;rsquo; vertex.&lt;/p&gt;

&lt;p&gt;We also require a container to store the vertices each vertex is able to reach directly. For this container, we can use an adjacency list. adj[i] is a reference to the first node in a linked list of nodes representing the vertices adjacent to vertex i. Here&amp;rsquo;s the adjacency list implementation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Node:
&quot;&quot;&quot;
Node class defines the basic structure of a node.
&quot;&quot;&quot;
def __init__(self, vertex=None, weight=None, next=None):
    self.vertex = vertex
    self.weight = weight
    self.next = next    

class LinkedList:
    &quot;&quot;&quot;
    LinkedList class defines a  linked list of nodes in which node.next reference the next node in the list
    &quot;&quot;&quot;
    def __init__(self):
        self.head = Node()

    def get_head(self):
        &quot;&quot;&quot;
        Returns a reference to the head node
        &quot;&quot;&quot;
        return self.head

    def add(self, vertex, weight):
        &quot;&quot;&quot;
        Append a new node with node.vertex as vertex to the last element in the linked list
        &quot;&quot;&quot;
        new_node = Node(vertex, weight)
        trav = self.head
        while(trav.next != None):
            trav = trav.next
            trav.next = new_node

    def print_list(self):
        trav = self.head.next
        while trav != None:
            print &quot;(%d, %d)&quot; % (trav.vertex, trav.weight),
        trav = trav.next
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By calling the function adj_list.print_list() method, we should get the following printout, which is the content of each adjacent node in the list.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(2, 4) (3, 2) (5, 3) None
(1, 4) (4, 5) None
(1, 2) (5, 6) (6, 3) (4, 1) None
(2, 5) (3, 1) (6, 6) None
(1, 3) (3, 6) (6, 2) None
(5, 2) (3, 3) (4, 6) None
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, we define an Edges class to contain the table mentioned earlier. The class has a 2d list attribute like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;edges = [[vertex, weight, parent_vertex],...]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Each row of the table is represented by edges[i].&lt;/p&gt;

&lt;p&gt;Edges class has the following attributes and methods:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Edges:
&quot;&quot;&quot;
Edge table consisting of vertex, weight and parent_vertex in a row.
&quot;&quot;&quot; 
edge_table = []

def __init__(self, adj_ref, start): 
    while adj_ref != None:          
        self.edge_table.append([adj_ref.vertex, adj_ref.weight, start])
        adj_ref = adj_ref.next  

def get_table(self):
    return self.edge_table

def add_row(self, vertex, weight, parent_vertex):
    &quot;&quot;&quot;
    Add a row in table with vertex, weight and parent_vertex attributes
    &quot;&quot;&quot;
    self.edge_table.append([vertex, weight, parent_vertex])

def pop_row(self):
    &quot;&quot;&quot;
    Delete the row in table with the smallest weight and return the corresponding vertex.
    &quot;&quot;&quot;
    if len(self.edge_table) &amp;gt; 0:
        least_weight = self.edge_table[0][1]
        least_weight_index = 0
        for i in range(1, len(self.edge_table)):
            if self.edge_table[i][1] &amp;lt; least_weight:
                least_weight = self.edge_table[i][1]
                least_weight_index = i
        least_weight_vertex = self.edge_table[least_weight_index][0]
        self.edge_table.pop(least_weight_index)
        return least_weight_vertex
    else:
        return None

def is_in(self, vertex):
    &quot;&quot;&quot;
    Return true if vertex is in table and false otherwise.
    &quot;&quot;&quot;
    for edge in self.edge_table:
        if edge[0] == vertex:
            return True
    return False

def vertex_weight(self, vertex):
    &quot;&quot;&quot;
    Return the weight corresponding to vertex.
    &quot;&quot;&quot;
    for edge in self.edge_table:
        if edge[0] == vertex:
            return edge[1]
    return None

def update_row(self, vertex, weight, parent_vertex):
    &quot;&quot;&quot;
    Changes the weight and parent_vertex corresponding to existing vertex.
    &quot;&quot;&quot;
    for edge in self.edge_table:
        if edge[0] == vertex:
            edge[1] = weight
            edge[2] = parent_vertex

def print_table(self):
    &quot;&quot;&quot;
    Print edge_table.
    &quot;&quot;&quot;
    print self.edge_table
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lastly, we have our prim&amp;rsquo;s algorithm to sort out the minimum spanning tree of the  directed, weighted graph.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def prim(adj_ref, start):
&quot;&quot;&quot;
Finds a minimal spanning tree in a connected, weighted, n-vertex graph. 
The graph is represented using adjacency lists; adj[i] is a reference to the    first node in a linked list of nodes.
The start vertex is start. In the minial spanning tree, the parent of a vertex  is defined as the vertex where existing minimal tree vertex extends from. 
Start vertex(parent of itself) is = 0.
&quot;&quot;&quot;
table = Edges(adj_ref[4].next, start)   
chosen = []
chosen.append(start)

while len(table.get_table()) &amp;gt; 0:
    table.print_table()
    ver = table.pop_row()
    chosen.append(ver)
    print &quot;Child vertex %d chosen.&quot; % ver
    trav = adj_ref[ver].next

    while trav != None:
        if trav.vertex in chosen:
            trav = trav.next
            continue
        if trav.vertex == start:
            trav = trav.next
            continue    
        if table.is_in(trav.vertex): # table has vertex
            if trav.weight &amp;lt; table.vertex_weight(trav.vertex): # new edge weight                is less than existing table value
                table.update_row(trav.vertex, trav.weight, ver) # update table                  to new vertex and weight
        else:
            # insert vertex and its elements into table
            table.add_row(trav.vertex, trav.weight, ver)
        trav = trav.next
print chosen
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The function prim is module level function and uses both Edges and LinkList classes to maintain interity and coherence of data.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s time to test the program:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if __name__ == &quot;__main__&quot;:
    adj_list = [0] * 6 # an array of adjacency list instances
    adj = copy.deepcopy(adj_list) # references to head node

    for i in range(len(adj_list)):
        adj_list[i] = LinkedList() # declare linked list instance
        adj[i] = adj_list[i].get_head() # reference adj[i] to head node

    # Setup the adjacency list
    adj_list[0].add(1,4)
    adj_list[0].add(2,2)
    adj_list[0].add(4,3)

    adj_list[1].add(0,4)
    adj_list[1].add(3,5)

    adj_list[2].add(0,2)
    adj_list[2].add(4,6)
    adj_list[2].add(5,3)
    adj_list[2].add(3,1)

    adj_list[3].add(1,5)
    adj_list[3].add(2,1)
    adj_list[3].add(5,6)

    adj_list[4].add(0,3)
    adj_list[4].add(2,6)
    adj_list[4].add(5,2)

    adj_list[5].add(4,2)
    adj_list[5].add(2,3)
    adj_list[5].add(3,6)

    prim(adj, 4)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With the last line prim(adj,4), the output would be:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[0, 3, 4], [2, 6, 4], [5, 2, 4]]
Child vertex 5 chosen.

[[0, 3, 4], [2, 3, 5], [3, 6, 5]]
Child vertex 0 chosen.

[[2, 2, 0], [3, 6, 5], [1, 4, 0]]
Child vertex 2 chosen.

[[3, 1, 2], [1, 4, 0]]
Child vertex 3 chosen.

[[1, 4, 0]]
Child vertex 1 chosen.

[4, 5, 0, 2, 3, 1]  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Okok some explaination on the output here, Every successive 2 lines indicates a successful selection of a vertex to be chosen as part of the minimal spanning tree. Each of the first line of 2d lists indicates the available options in the table. Second line, Child vertex x chosen. indicates which of the vertex(and its corresponding row) is chosen. The last line outputs the order of which the vertices are selected, with the first element being the start vertex.&lt;/p&gt;

&lt;p&gt;Prim&amp;rsquo;s algorithm is also an optimal implementation of the greedy algorithm to achieve a minimal spanning tree. However, through repeated runtime tests, it seems Prim&amp;rsquo;s algorithm is consistently faster than &lt;a href=&quot;http://blog.hguochen.com/programming/greedy%20algorithm/2014/06/17/Kruskal%27s-Algorithm/&quot;&gt;Kruskal&amp;rsquo;s Algorithm&lt;/a&gt;. I did a time complexity analysis of Prim&amp;rsquo;s and came up with the following:&lt;/p&gt;

&lt;p&gt;Prim&amp;rsquo;s algorithm time complexity(major functions):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;**Operation**                   **Worst-Case Time**
Edges(adj_ref, start)           O(n)
pop_row()                       O(lg n)
is_in(vertex)                   O(1)
vertex_weight(vertex)           O(n)
update_row(vertex, weight, ..)  O(n)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The outer while loop take time O(n). The inner loop has a relation with the number of edges. Since we know that given n vertices, there can be a maximum of 2n edges so the time complexity of the inner while loop has complexity of O(n**2).&lt;/p&gt;

&lt;p&gt;So the final time complexity of prim&amp;rsquo;s algorithm will be O(n**3). This is a bad time complexity given that the operations are not very convoluted. I think the bottleneck of this implementation is the abstract data structure used. I used a linked list data structure which in itself has a complexity of O(n). If we can use a more efficient data structure such as binary minheap structure which has O(lg n) complexity, we can really reduce the time complexity of Prim&amp;rsquo;s algorithm to O(n2 lg n ). Maybe i&amp;rsquo;ll try to implement a binary minheap structure later.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s my &lt;a href=&quot;https://github.com/hguochen/algorithms/blob/master/python/prim.py&quot;&gt;full implementation&lt;/a&gt;. I would love to hear suggestions on how to improve the time complexity or anything in general. Cheers :)&lt;/p&gt;
</description>
                                <pubDate>Tue, 17 Jun 2014 09:29:39 -0700</pubDate>
                                <link>http://blog.hguochen.com//programming/greedy%20algorithm/2014/06/17/Prim's-Algorithm/</link>
                                <guid isPermaLink="true">http://blog.hguochen.com//programming/greedy%20algorithm/2014/06/17/Prim's-Algorithm/</guid>
                        </item>
                
                        <item>
                                <title>Kruskal&#39;s Algorithm</title>
                                <description>&lt;p&gt;Given six cities and the costs(in millions of dollars) of rebuilding roads between them. The road commission has decided to rebuild enough roads so that each pair of cities will be connected, either directly or by going through other cities, by rebuilt roads. Find a minimum cost set of roads meeting its criterion.
&lt;img src=&quot;http://i1113.photobucket.com/albums/k508/houguochen/Screenshot2014-06-17004156.png&quot; height=&quot;400&quot; alt=&quot;city roads&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is an example of using a greedy algorithm in graph theory to find a minimum spanning tree for a connected weighted graph. Vertices represent the cities and edges represent the roads to be rebuilt. Red digits indicates the amount of money to rebuild that stretch of road.&lt;/p&gt;

&lt;p&gt;To solve the problem, 3 problems have to be addressed.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How to represent the graph?&lt;/li&gt;
&lt;li&gt;How to select the edges in nondecreasing order by its weight?&lt;/li&gt;
&lt;li&gt;How to determine whether adding an edge would create a cycle?&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The algorithm pseudocode for this problem follows the Kruskal algorithm:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kruskal_algorithm(edgelist, n) {
    sort(edgelist)
    for i = 1 to n
        makeset(i)
    count = 0
    i = 1
    while count &amp;lt; n-1:
        if(findset(vertex1) != findset(vertex2)) {
            count += 1
            union(vertex1, vertex2)
        }
        i += 1
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First, we use a 2d array to represent each of the edges in the graph. eg. [1,2] would indicate an edge between city 1 and 2. Then we store the edge&amp;rsquo;s corresponding weight in another array with the weight as its element. eg.[4] for city 1 and 2. We also need a 3rd array to store all the vertices involved(purpose to be discussed). To avoid excessive parameter passing, let&amp;rsquo;s declare a Weighted_graph class:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Weighted_graph:
&quot;&quot;&quot;
Implement a weighted graph with a 2d list and a corresponding weight list
Vertices are represented by elements(eg. 1,2,3) in the graph list and edges are represented by a list collection of each 2 vertices
(eg. [1,2])
&quot;&quot;&quot;
edges = []
weight = []
vertices = []

def __init__(self, edge_list, weight):
    self.edges.append(edge_list)
    self.weight.append(weight)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Given the above graph, the corresponding data would be represented in our class attributes as the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;edges = [[3, 4], [1, 3], [5, 6], [1, 5], [3, 6], [1, 2], [2, 4], [3, 5], [4, 6]]
weight = [4,2,3,5,1,6,3,6,2]
vertices = [[1],[3],[4],[5],[6],[2]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We are also going to add utility functions, add() and print() to aid in our implementation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def add(self, edge_list, weight):
    &quot;&quot;&quot;
    Add an edge(defined by 2 vertices in a list) and its corresponding weight to edges
    &quot;&quot;&quot;
    self.edges.append(edge_list)
    self.weight.append(weight)

def print_graph(self):
    &quot;&quot;&quot;
    Print each set of edges in a graph and its corresponding edges
    &quot;&quot;&quot;
    print self.edges
    print self.weight
    print self.vertices
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Second, in order to select edges in nondecreasing order, we need to sort its corresponding weight in nondecreasing order. Here we use a simple insertion sort algorithm to do the job:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def __sort(self):
    &quot;&quot;&quot;
    Sorts both edges and weight lists in nondecreasing order of weight list elements
    &quot;&quot;&quot; 
    if len(self.edges) != len(self.weight):
        return
    for i in range(1, len(self.weight)):
        temp_weight = self.weight[i]
        temp_edge = self.edges[i]
        current = i - 1
        while current &amp;gt;= 0 and temp_weight &amp;lt; self.weight[current]:
            self.weight[current+1] = self.weight[current]
            self.edges[current+1] = self.edges[current]
            current -= 1
        self.weight[current+1] = temp_weight
        self.edges[current+1] = temp_edge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next we need to be able to initialize each vertex to its own component in vertices array. Let&amp;rsquo;s use a private makeset function to achieve this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def __makeset(self):
    &quot;&quot;&quot;
    Initialize each vertex to its own component
    &quot;&quot;&quot;
    for i in range(len(self.edges)):
        for j in range(len(self.edges[i])):             
            if self.edges[i][j] not in self.vertices:
                self.vertices.append(self.edges[i][j])

    for k in range(len(self.vertices)):
        self.vertices[k] = [self.vertices[k]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we need a way to find the corresponding vertex in the vertices list of list and return a index to the location of the vertex in question.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def __findset(self, vertex):
    &quot;&quot;&quot;
    Find and return the index to which vertex belongs in vertices list
    &quot;&quot;&quot;     
    for i in range(len(self.vertices)):
        for element in self.vertices[i]:
            if element == vertex:
                return i
    return None
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just 1 last function! We need to be able to merge the 2 vertex in vertices list together to indicate that their corresponding edge have been selected. We use a union function to manipulate the vertices list directly.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def __union(self, vertex1, vertex2):
    &quot;&quot;&quot;
    Joins 2 vertex together         
    &quot;&quot;&quot;
    index1 = self.__findset(vertex1)
    index2 = self.__findset(vertex2)
    for element in self.vertices[index2]:
        self.vertices[index1].append(element)
    self.vertices.pop(index2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So we have all the functions we need to implement Kruskal&amp;rsquo;s algorithm. Let&amp;rsquo;s convert the pseudocode earlier to python codes&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def kruskal(self):
    self.__sort()
    self.__makeset()
    count, i = 0, 0     
    while len(self.vertices) &amp;gt; 1:
        if self.__findset(self.edges[i][0]) != self.__findset(self.edges[i][1]):
            print &quot;(%d %d) edge selected.&quot; % (self.edges[i][0], self.edges[i][1])
            count += 1
            self.__union(self.edges[i][0], self.edges[i][1])
        i += 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this implementation, we test run the codes and should be able to get the following output.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(3 4) edge selected.
(1 3) edge selected.
(5 6) edge selected.
(1 5) edge selected.
(1 2) edge selected.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Keep in mind that our vertices list starts off like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vertices = [[1],[3],[4],[5],[6],[2]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As each set of edges is selected, its 2 cities are combined to indicate selection. This helps in determining if the graph is cyclic at each new edge selection stage. Finally, our vertices list looks like this, which indicates all the vertices are connected minimally.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vertices = [[1, 3, 4, 5, 6, 2]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kruskal&amp;rsquo;s algorithm is a optimal implementation of greedy algorithm. Here&amp;rsquo;s my &lt;a href=&quot;https://github.com/hguochen/algorithms/blob/master/python/kruskal.py&quot;&gt;full implementation&lt;/a&gt;.&lt;/p&gt;
</description>
                                <pubDate>Mon, 16 Jun 2014 17:02:54 -0700</pubDate>
                                <link>http://blog.hguochen.com//programming/greedy%20algorithm/2014/06/16/Kruskal's-Algorithm/</link>
                                <guid isPermaLink="true">http://blog.hguochen.com//programming/greedy%20algorithm/2014/06/16/Kruskal's-Algorithm/</guid>
                        </item>
                
                        <item>
                                <title>Steps to solving programming problems</title>
                                <description>&lt;p&gt;If you are looking for a systematic approach to solving programming problems, i have one for you here. This is my variation from the &lt;a href=&quot;http://www.coursehero.com/file/7263502/Programing-with-the-problem-Analysis-Coding-Execution-Cycle/&quot;&gt;Problem analysis coding execution cycle&lt;/a&gt; that typical computer science class will teach. Hope it will be of use to you!&lt;/p&gt;

&lt;h2&gt;Problem analysis coding execution cycle&lt;/h2&gt;

&lt;h3&gt;1. Analyse the problem&lt;/h3&gt;

&lt;h5&gt;a. Problem specification&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;What is the problem asking for?&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;b. Requirements&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;What are the constraints and requirements?&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;c. Assumptions&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;What are the underlying assumptions on the question?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Is there any assumptions which could be challenged?&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;d. Sample test cases&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Identify at least 1 sample test case.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How many test cases should there be minimally?&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;e. Determine input &amp;amp; output&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Determine the input and output and their corresponding data types&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;f. Identify input boundary cases&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;List out all boundary cases for inputs and logic flows.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;2. Implement the algorithm&lt;/h3&gt;

&lt;h5&gt;a. Algorithm structure&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;What is the best data structure and data types for this problem?&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;b. Design Algorithm&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Write algorithm in plain english or pseudo code.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Identify repeated patterns if any.&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;c. Testing algorithm correctness&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Verbally run through the algrithm with pre-defined test cases&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;d. Write code&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Write code incrementally with adequete tests at each step.&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;e. Test code correctness&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Run the code with sample inputs to test for desired outputs.&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;f. Testing boundary cases&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Run the code with boundary cases and lookout for unexpected behaviors.&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;d. Verify program correctness&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Re-visit the question and and lookout for inconsistencies  and redundancies.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;3. Program maintenance&lt;/h3&gt;

&lt;h5&gt;a. Determine time complexity&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;What is the average case complexity?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What is the worst case complexity?&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;b. Determine space complexity&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Are there redundant or unused variables?&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;c. Refactoring&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Can the code be refactored to improve readability?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Can the algorithm be redesigned to improve efficiency?&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;d. Documentation&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;Leave comments where the abstraction logic is unclear.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Are there any trivial comments?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Write formal documentations if the program is expected to be used by people.&lt;/em&gt;&lt;/p&gt;
</description>
                                <pubDate>Wed, 04 Jun 2014 09:07:39 -0700</pubDate>
                                <link>http://blog.hguochen.com//programming/web%20development/2014/06/04/Steps-to-solving-programming-problems/</link>
                                <guid isPermaLink="true">http://blog.hguochen.com//programming/web%20development/2014/06/04/Steps-to-solving-programming-problems/</guid>
                        </item>
                
                        <item>
                                <title>Culture in the Silicon Valley</title>
                                <description>&lt;p&gt;In a recent visit to California, i visited a number of famous companies in the Silicon Valley such as Google, Facebook, Evernote, Quora, Airbnb etc. These are all the &amp;lsquo;cool&amp;rsquo; companies with great cultures that many would die to get in. But what really does it mean to have a great culture? Sure the oversized bean bags, foosball tables, free meals and modern-looking workspaces forms part of it. But as i learnt from the many visits, great culture is more than materialistic satisfactions and cool company perks.&lt;/p&gt;

&lt;p&gt;The key, is that everyone in the company thinks alike. What does it mean? It means a collective group of people come together to live and breathe on the same set of problems, every single day. They believe that a company is greater than the sum of its parts. They sweat the mission and vision of their greater entity.&lt;/p&gt;

&lt;p&gt;At Facebook, everyone wants to build things that makes people stay connected. It doesn&amp;rsquo;t matter if their role isn&amp;rsquo;t engineering. The company hired people who care about being social no matter what discipline they are in so this trait integrates into their daily work. They ruthlessly scrutinize their work in order to produce the best products that makes millions of people say &amp;lsquo;hello&amp;rsquo; each day. It is this shared camaraderie the eliminates frustrations when a better design is shot down by an engineering manager who just wants to fix bugs.&lt;/p&gt;

&lt;p&gt;Airbnb wants to unlock unique spaces worldwide. This vision tickles down to every single one of its employees. In order for that, the company built an environment where you can spend time building a global reach instead of having to fight for time to do your laundry, or get frustrated over expensive lunches. All mundane things are taken care of, so you can focus on what really matters.&lt;/p&gt;

&lt;p&gt;All these, brings the idea that executing a company vision needs to be everyone&amp;rsquo;s job. Is everybody sharing the company&amp;rsquo;s delights and sorrows? Does everyone talk about user&amp;rsquo;s problems or talk about their own problems? I think a big reason why these companies consistently hit the top of &amp;lsquo;Dream company to work for&amp;rsquo; list is that they&amp;rsquo;ve figured out how to solve its employee&amp;rsquo;s little problems, in return for these talents helping to solve company&amp;rsquo;s big problems. It is also this realization that differentiates between a good company and a great company.&lt;/p&gt;

&lt;p&gt;When you walk into your office tomorrow, start listening to what your employees are saying. If you can&amp;rsquo;t help them solve their daily problems, don&amp;rsquo;t expect them to solve yours.&lt;/p&gt;
</description>
                                <pubDate>Thu, 29 May 2014 16:12:51 -0700</pubDate>
                                <link>http://blog.hguochen.com//random/startup/2014/05/29/Culture-in-the-Silicon-Valley/</link>
                                <guid isPermaLink="true">http://blog.hguochen.com//random/startup/2014/05/29/Culture-in-the-Silicon-Valley/</guid>
                        </item>
                
        </channel>
</rss>