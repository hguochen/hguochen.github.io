<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: development | GuoChen | Blog]]></title>
  <link href="http://blog.hguochen.com/categories/development/atom.xml" rel="self"/>
  <link href="http://blog.hguochen.com/"/>
  <updated>2014-07-23T09:29:30+08:00</updated>
  <id>http://blog.hguochen.com/</id>
  <author>
    <name><![CDATA[GuoChen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to design your blog]]></title>
    <link href="http://blog.hguochen.com/design/development/2014/03/23/How-to-design-your-blog/"/>
    <updated>2014-03-23T18:18:25Z</updated>
    <id>http://blog.hguochen.com/design/development/2014/03/23/How-to-design-your-blog</id>
    <content type="html"><![CDATA[<p>Recently i redesigned my <a href="http://blog.hguochen.com">blog</a>. It was an enjoyable experience as i try to apply my new-acquired <a href="http://design.tutsplus.com/articles/50-totally-free-lessons-in-graphic-design-theory--psd-2916">design theories</a> learnt from <a href="http://design.tutsplus.com">tutsplus.com</a>. My goal was to create an <strong>elegant</strong> and <strong>easy-to-read</strong> blog that represents myself both visually and content-wise. In this post, i will bring you through some of my design considerations for my blog.</p>

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-03-23at63512pm.png" width="500" alt="hguochen blog" /></p>

<p><em>A look behind the scene of my blog redesign</em></p>

<hr />

<h2>Define your brief</h2>

<p>As with any projects, it&rsquo;s important to figure what exactly you want to achieve and jot it down clearly. This can be a constant reminder as you progress through the design stages. At this point, we just need to figure out our ultimate goal without being worried about the details.</p>

<p>I wanted to design a blog that is <strong>simple to navigate</strong> on index page and contains <strong>easy-to-read</strong> blogposts across different devices. All of these pages should clearly define me and my thoughts.</p>

<h2>Research and idea generation</h2>

<p>Do some googling to get the creativity flowing. Inspirations can come from anywhere. Some of the best places i recommend to check out are:</p>

<ul>
<li><a href="http://pinterest.com">Pinterest</a></li>
<li><a href="http://www.smashingmagazine.com">Smashing Magazine</a></li>
<li><a href="http://wordpress.org/themes/">Wordpress Themes</a></li>
<li><a href="http://medium.com">Medium</a></li>
</ul>


<p>As you go through these websites, grab a pen and sketchbook to jot down some of the things such as positions of blog elements, layout, colours, typefaces and navigation details commonly used. This will give you a basic idea of the contents to cover in designing your blog.</p>

<h2>Design considerations</h2>

<p>I wanted users to easily browse through my blog and focus on what i&rsquo;ve written, so i&rsquo;m not going to have too many &lsquo;content&rsquo; pages such as about me, work, contact me etc. These side dishes are more for a portfolio page rather than a blog. In fact, i&rsquo;m only going to have 2 main pages:</p>

<ul>
<li>Index page</li>
<li>Content page</li>
</ul>


<p>Based on my these ideas, it seems that i will need total control of designing my blog. I can&rsquo;t afford to use ready made templates such as from <a href="http://wordpress.com">Wordpress</a>. Instead, i&rsquo;m using a blog engine called <a href="http://jekyllrb.com/">Jekyll</a> where i have the freedom to configure every element of my blog.</p>

<h3>Index page</h3>

<p>This will be the main page of the blog, which is also what greets users when they type in my blog url. Considering a typical user has a short attention-span of only 5 seconds on a webpage, i will need to present the entirety of my blog in that timeframe. Its good to give a short introduction of myself and the genre of this blog.</p>

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-03-23at72040pm.png" width="500" alt="blog intro" /></p>

<p>Next i need a way to quickly tell visitor what kind of topics i write about, and there&rsquo;s no better way than allowing them to glance through my blog topics in a short scroll. Many blogs present their latest blogposts at the top. I think this is a bad practice as your latest blogpost might not necessarily be of visitors' interest. Sieving through your entire post to look at your other blogposts is just too much of a pain to get to know you. I&rsquo;d advise against irritating your visitors.</p>

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-03-23at73003pm.png" width="500" alt="blog index browsing" /></p>

<p>With the year-annotated scrolling, my visitors will be able to quickly scroll through my list of blogposts and look for interests. We are providing a &lsquo;simple to navigate&rsquo; index page, as part of our objective listed above.</p>

<h3>Content page</h3>

<p>This is the meat of the blog. In fact, most visitors will be entering your blog through a blogspot than index page itself. It is important to establish some form of coherence between the content page and the index page. I chose to do it subtlely by appending my blog thumbnail picture at the top of the page. Followed by the date of the blogpost and topic.</p>

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-03-23at74802pm.png" width="500" alt="blogpost header" /></p>

<p>Footer of the blogpost should be dedicated to interactivity. If visitors has taken the time to read to the bottom, he/she most probably have enjoyed the post. It is good to elicit further action by either allowing the visitor to share on social domains or provide a comment for further discussion.</p>

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-03-23at74945pm.png" width="500" alt="blogpost footer" /></p>

<h3>On Measure</h3>

<p><img src="http://www.markboulton.co.uk/images/uploads/measure_1.gif" alt="measure" /></p>

<p>Measure, is the name given to the width of a body of type. There are several units of measurement used for defining the measure&rsquo;s width. Three basic units are:</p>

<ul>
<li>One point = 1/72 of an inch</li>
<li>One pic = 12 points</li>
<li>One em = Distance horizontally equal to the type of size, in points. you are using. Eg. 1em of 12pt type is 12pt.</li>
</ul>


<p>For a full width monitor, the optimum measure for reading is between <strong>66-72 words</strong> a line. If you scale that down to a mobile screen, measure would come down to about <strong>8-13 words</strong> a line.</p>

<h3>On font-size</h3>

<p>Appropriate font size will greatly enhance the readability of texts. I shall not go into detail here but some tried and tested font sizes for blog contents adopts the following pixel sizes:</p>

<ul>
<li>16px &ndash; Body copy and leading</li>
<li>24px &ndash; Main heading &amp; section headings</li>
<li>18px &ndash; Subheadings</li>
<li>13px &ndash; All other headed elements</li>
</ul>


<p>This will give the following styles visually:</p>

<p><img src="http://www.markboulton.co.uk/images/uploads/typo4_headings.gif" width="300" alt="font sizes" /></p>

<p>For the frontend designers, your CSS could look like this with the specifications above:</p>

<pre><code>body {
    font: 16px/1.5em "Lucida Grande";
}

h1, h2, h3, h4, h5, h6 {
    font-family: helvetica, arial, verdana, sans-serif;
    font-weight: normal;
}

h1 {
    font-size: 218%;
}

h2 {
    font-size: 164%;
}

h3 {
    font-size: 145%;
}

h4 {
    font-size: 118%;
}
</code></pre>

<h3>On typefaces</h3>

<p>We read most easily with what we are most familiar with. This would mean the traditional serif family of typefaces. But even in the serif family, there are countless kinds of typefaces to choose from. On choosing a typeface, i&rsquo;ve had a long trial and error on this. Here are 3 different serif types i&rsquo;ve experimented with using on the same content:</p>

<hr />

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-03-23at82316pm.png" width="400" alt="helvetica_neue" />
<strong>helvetica neue</strong></p>

<p>Helvetica is a great font for texts, but it is not such a great typeface for continuous smooth reading. It lacks the &lsquo;legs&rsquo; seen on other typefaces which provides the smooth gliding feel when reading on a screen.</p>

<hr />

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-03-23at82347pm.png" width="400" alt="sans-serif" />
<strong>sans-serif</strong></p>

<p>Serif is a safe font. Generally you won&rsquo;t go wrong with this font. However, since i prefer a lighter shade of texts, i have to reduce the font-weight from normal 300 to 200. This didn&rsquo;t fare well with serif typeface and words appear to thin to read properly.</p>

<hr />

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-03-23at82121pm.png" width="400" alt="georgia" />
<strong>georgia</strong></p>

<p>Part of the serif typeface family, georgia has always been a strong choice for continous texts. Some of the most popular web such as <a href="http://medium.com">Medium</a> and <a href="http://www.nytimes.com">NyTimes</a> uses georgia to render their texts. An additional advantage of georgia typeface is that it&rsquo;s distinctive enough that font colors normally won&rsquo;t erode its readability.</p>

<hr />

<p>After weighing the considerations, i&rsquo;ve decided to use &lsquo;Helvetica Neue&rsquo; for headings and &lsquo;georgia&rsquo; for paragraph texts. Here&rsquo;s how it looks like:</p>

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-03-23at74802pm.png" width="500" alt="blogpost header" /></p>

<h3>On font color</h3>

<p>Black text on white background offers the best readability. However, prolonged exposure on black contrasted texts could be painful to our eyes since modern screen brightness are getting better and better. As such, i&rsquo;ve decided to reduce the contrast of texts by changing paragraph texts to a &lsquo;greyier&rsquo; color while not compromising readability. After some trial and error, the color i&rsquo;ve chosen is a grey with hexcode: #333332.</p>

<p><img src="http://www.colorhexa.com/333332.png" height="150" width="200" alt="333332" /></p>

<h2>Responsive Design</h2>

<p>The last of my consideration is to make sure my blog is readable on both mobile and desktop devices alike.</p>

<p>I like to use a grid because it provides a structural foundation, whiel making the development process easier and more efficient. Using a flexible grid enables a website to sclae dynamically to fit any device width. Below is the CSS for my responsive grid, which is my variations from <a href="http://getbootstrap.com">bootstrap</a>&rsquo;s responsive grid.</p>

<pre><code>/* 12 col responsive grid */

.row {
    clear: both;
    max-width: 1040px;
    margin: 0 auto;
}

[class^="col-"]:last-child {
    margin: 0;
}

[class^="col-"] {
    float: left;
    margin: 0 3.84615384615% 0 0;
    list-style: none;
    position: relative;
}


.col-xs-1 { width: 4.8076923077% }
.col-xs-2 { width: 13.4615384615% }
.col-xs-3 { width: 22.1153846154% }
.col-xs-4 { width: 30.7692307692% }
.col-xs-5 { width: 39.4230769231% }
.col-xs-6 { width: 48.0769230769% }
.col-xs-7 { width: 56.7307692308% }
.col-xs-8 { width: 65.3846153846% }
.col-xs-9 { width: 74.0384615385% }
.col-xs-10 { width: 82.6923076923% }
.col-xs-11 { width: 91.3461538462% }
.col-xs-12 { width: 100%; margin: 0 }
</code></pre>

<p>My breakpoints for my responsive blog are:</p>

<ul>
<li>360px max-width for mobile</li>
<li>768px max-width for tablets</li>
<li>1024px max-width for desktops</li>
</ul>


<p>Keep in mind that with a growing array of devices, there is no longer a &lsquo;common&rsquo; width concepts. It is best to optimize for whichever devices you intend to serve.</p>

<p>Here&rsquo;s my blog&rsquo;s responsive layout on a few devices:</p>

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/Mobile%20Uploads/E88F66B9-1921-4E9E-8F48-FB5AF6571F4B.png" width="150" alt="iPhone" /></p>

<p><strong>iPhone 5</strong></p>

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/photo.png" width="300" alt="ipad" /></p>

<p><strong>iPad Mini</strong></p>

<p><img src="http://i1113.photobucket.com/albums/k508/houguochen/ScreenShot2014-03-23at85832pm.png" width="500" alt="desktop" /></p>

<p><strong>Desktop</strong></p>

<p>So, i&rsquo;ve designed and tested out my new blog layout. It is my first time designing a blog from scratch and i&rsquo;ve really learnt alot in the process! Designing is like a constant war between your left brain and right brain while still trying to grip on to established design principles. ROAR! But still, it is fun :) Hopefully my experience has provided you with a guideline to designing blogs. I&rsquo;d love to hear about your experiences in designing your own blog!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My jekyll workflow]]></title>
    <link href="http://blog.hguochen.com/development/2014/01/08/My-jekyll-workflow/"/>
    <updated>2014-01-08T16:48:29Z</updated>
    <id>http://blog.hguochen.com/development/2014/01/08/My-jekyll-workflow</id>
    <content type="html"><![CDATA[<p>I just automated my blogging with jekyll with the following routines. My goal is to cut down on inputting a string of commands into the terminal using <a href="https://github.com/hguochen/jekyll-rakefile">Rakefile</a> and standard terminal commands.</p>

<blockquote><p>Jason Seifer has an awesome <a href="http://jasonseifer.com/2010/04/06/rake-tutorial">Rake Tutorial</a> for developers new to Rake.</p></blockquote>

<h3>My Github pages</h3>

<p>I&rsquo;ve set up <a href="https://github.com/hguochen/hguochen.github.io">my github pages</a> to consist of two branches: source and master. The source branch consists of the entire project and as such tracks all changes. The master branch consists solely of the compiled site, which can be found in the _site subdirectory.</p>

<h3>My Local environment</h3>

<p>blog/</p>

<p>|&mdash;blog.hguochen.com/</p>

<p>|&mdash;hguochen.github.io/</p>

<p>Main folder blog has 2 sub directories. blog.hguochen.com which holds jekyll generated site content. hguochen.github.io holds jekyll raw files such as <em>posts, </em>layouts, _includes etc.</p>

<h3>My workflow</h3>

<p>Automate terminal commands by adding the following alias into .bashrc file:</p>

<pre><code>alias blogdir="cd /path/to/blog/hguochen.github.io"

alias build_blog=""blogdir; jekyll build; sudo cp -r /path/to/blog/hguochen.github.io/_site/* /path/to/blog/blog.hguochen.com; cd /path/to/blog/blog.hguochen.com; git add --all; git commit -m "Blogpost on ["Date"]"; git push origin master;"

alias bb="build_blog"
</code></pre>

<p>Move to jekyll raw files folder:</p>

<pre><code>$ blogdir
</code></pre>

<p>Create new post with Rake:</p>

<pre><code>$ rake post["Title"]
</code></pre>

<p>Previous command automatically fires up the default text editor for the file just created. In this case, i&rsquo;m using <a href="http://mouapp.com">Mou</a> for .markdown file extensions.</p>

<p>Once i&rsquo;m done with my blog, i&rsquo;m ready to build and publish my blog by pushing into github pages repository, with a simple alias we made earlier:</p>

<pre><code>$ bb
</code></pre>

<p>That&rsquo;s it! So this is my 3 step process to publishing my blog, powered by <a href="http://jekyllrb.com">Jekyll</a>.</p>

<p>Special thanks to <a href="https://twitter.com/leetucksing">@leetucksing</a> for introducing me this awesome blogging tool!</p>

<p>By the way, <a href="https://twitter.com/athanhcong">@athanhcong</a> made an amazing app <a href="http://blogwith.co/">BlogWith</a> which connects evernote to jekyll powered blogs and allows you to edit blogs directly on <a href="http://evernote.com">Evernote</a>. Gona try how it works with jekyll later :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Fix] Changing wordpress site url leading to 404 error pages]]></title>
    <link href="http://blog.hguochen.com/development/2013/09/15/%5BFix%5D-Changing-wordpress-site-url-leading-to-404-error-pages/"/>
    <updated>2013-09-15T11:38:14Z</updated>
    <id>http://blog.hguochen.com/development/2013/09/15/[Fix]-Changing-wordpress-site-url-leading-to-404-error-pages</id>
    <content type="html"><![CDATA[<p>This is actually an easier problem than <a href="http://blog.hguochen.com/blog/2013/09/fix-wordpress-permalink-not-working/">Wordpress Permalink not working</a></p>

<ol>
<li><p>In terminal, go to your wordpress folder directory</p>

<pre><code> $ cd /path/to/wordpress_directory/
</code></pre></li>
<li><p>Open wp-config.php file</p>

<pre><code> $sudo vim wp-config.php
</code></pre></li>
<li><p>There will be a long list of defines already written in the file, like the following:</p>

<pre><code> define('AUTH_KEY', 'put your unique phrase here');
 define('SECURE_AUTH_KEY', 'put your unique phrase here');
 define('LOGGED_IN_KEY', 'put your unique phrase here');
 define('NONCE_KEY', 'put your unique phrase here');
 define('AUTH_SALT', 'put your unique phrase here');
 define('SECURE_AUTH_SALT', 'put your unique phrase here');
 define('LOGGED_IN_SALT', 'put your unique phrase here');
 define('NONCE_SALT', 'put your unique phrase here');
</code></pre>

<p> Add the following defines just below the last define:</p>

<pre><code> define('WP_HOME','YOUR_HOME_URL');
 define('WP_SITEURL', 'YOUR_HOME_URL');
 define('RELOCATE',true);
</code></pre></li>
</ol>


<p>This is the simplest method to fixing this problem, but the drawback is that your website url is now hardcoded. You will not be able to dynamically change the url in wordpress dashboard <strong>Settings</strong> tab anymore.</p>

<p>If you are looking for a more robust solution, <a href="http://codex.wordpress.org/changing_the_site_url">this</a> will help you out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Update python2.6 to python 2.7 in ec2 linux instance]]></title>
    <link href="http://blog.hguochen.com/development/2013/09/12/Update-python2.6-to-python-2.7-in-ec2-linux-instance/"/>
    <updated>2013-09-12T11:10:54Z</updated>
    <id>http://blog.hguochen.com/development/2013/09/12/Update-python2.6-to-python-2.7-in-ec2-linux-instance</id>
    <content type="html"><![CDATA[<p>This post by <a href="http://tumblr.kurttheviking.com/post/30920138314/painless-python-2-7-on-aws-ec2">Kurttheviking</a> gives the steps in updating python 2.6 to python2.7 in AWS EC2 instances but i find the writeup abit messy and missing some considerations. So i&rsquo;m reorganizing it in number sequence.</p>

<ol>
<li><p>Check current python version</p>

<pre><code> $ python -V
 Python 2.6.8
</code></pre></li>
<li><p>AWS now provides python2.7 via the package manager, so we can install 2.7 easily.</p>

<pre><code> $ sudo yum install python27
</code></pre></li>
<li><p>Now there are 2 versions of python in your instance</p>

<pre><code> $ python -V
 Python 2.6.8
 $ python27 -V
 Python 2.7.5
</code></pre></li>
<li><p>Check where Python2.7 is expecting packages to go</p>

<pre><code> $ python27 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"
 /usr/lib/python2.7/site-packages
</code></pre></li>
<li><p>To enable easy_isntall with our fresh Python2.7 interpreter we need to add setuptools. Head on over to <a href="http://pypi.python.org/pypi/setuptools">Setuptools</a> and confirm the URL for the egg installer. Then, change back to your cozy ec2-user home directory and snag a copy of that egg file.</p>

<pre><code> $ cd ~
 $ wget http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea
</code></pre></li>
<li><p>Run the egg as you would any shell script</p>

<pre><code> $ sudo sh setuptools-0.6c11-py2.7.egg
 Processing setuptools-0.6c11-py2.7.egg
 Copying setuptools-0.6c11-py2.7.egg to /usr/lib/python2.7/site-packages
</code></pre></li>
<li><p>Add git package</p>

<pre><code> $ sudo yum install git
</code></pre></li>
<li><p>Set alias in .bash_profile for the new python2.7</p>

<pre><code> $ sudo vim .bash_profile
</code></pre>

<p> Add the following line to .bash_profile</p>

<pre><code> alias python='python27'
</code></pre>

<p> Exit vim and source the file</p>

<pre><code> $ source .bash_profile
</code></pre></li>
</ol>


<p><strong>Note</strong>: If you set python2.6 as the default python interpreter, yum might break as a result. You can follow <a href="http://freethreads.wordpress.com/2013/06/19/fixing-broken-yum-on-cent-os-5-9/">this guide</a> to fix &lsquo;No module named yum&rsquo; error</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Fix] Wordpress Permalink not working]]></title>
    <link href="http://blog.hguochen.com/development/2013/09/04/%5BFix%5D-Wordpress-Permalink-not-working/"/>
    <updated>2013-09-04T11:46:21Z</updated>
    <id>http://blog.hguochen.com/development/2013/09/04/[Fix]-Wordpress-Permalink-not-working</id>
    <content type="html"><![CDATA[<p>There has been many solutions on the web with regards to this issue. I&rsquo;m drawing exerpts from some of these links which worked for me.</p>

<p>Problem: When you try to use fancy permalinks in the <strong>Settings>Permalinks</strong> under Wordpress Dashboard, you may encounter broken links to each individual posts.</p>

<ol>
<li>Does .htaccess file exist?</li>
</ol>


<p>Whenever you change the Permalinks, Wordpress should update the .htaccess file for you. Sometimes if the file is not created, Wordpress won&rsquo;t create it automatically. This is simply because it may not have the permission to do that. So if you can&rsquo;t find the file in the root of the Wordpress installation (After showing the hidden files), create it yourself.</p>

<ol>
<li>Is .htaccess file editable?</li>
</ol>


<p>If the file is there, check the modification time of the file. Then change the Permalink settings from WordPress hit save and go back to check the time again. If it’s not updated then WordPress doesn’t have the permission to update it. To update it you can do <strong>one</strong> of the following:</p>

<ul>
<li>Change the permission of your htaccess to 777(or whatever works in your server), and set the Permalink again. Once the wordpress added the required code in .htaccess, change back the permission of .htaccess to 644.</li>
<li><p>Add the following code to your .htaccess file manually:</p>

<p>  <IfModule mod_rewrite.c>
      RewriteEngine On
      RewriteBase /
      RewriteCond %{REQUEST_FILENAME} !-f
      RewriteCond %{REQUEST_FILENAME} !-d
      RewriteRule . /index.php [L]
      </IfModule>
      # END WordPress</p></li>
<li><p>Is rewrite Module enabled in your server?</p></li>
</ul>


<p>If you are in a shared server, simply ask the technical supports whether this module is enabled. If you are on your server try running this command in your terminal:</p>

<pre><code>    $ sudo a2enmod rewrite
</code></pre>

<p>If you get &ldquo;Module rewrite already enabled&rdquo; then move to the next step or else restart your apache server using:</p>

<pre><code>    $ sudo service apache2 restart
</code></pre>

<ol>
<li>Does apache know about .htaccess file?</li>
</ol>


<p>Open apache2.conf file (normally you will find it in /etc/apache2) and make sure that this line is there:</p>

<pre><code>    AccessFileName .htaccess
</code></pre>

<ol>
<li>Search for AllowOverride option</li>
</ol>


<p>Try searching for &ldquo;AllowOverride&rdquo; in these files:</p>

<ul>
<li>/etc/apache2/apache2.conf</li>
<li>/etc/apache2/httpd.conf</li>
<li>/etc/apache2/sites-enabled/000-default</li>
<li>/etc/apache2/sites-available/yourdomain.com</li>
</ul>


<p>If you found it in this form:</p>

<pre><code>AllowOverride None
</code></pre>

<p>just comment it out by adding # in front of it. Then restart Apache and check if the Permalinks are working.</p>

<ol>
<li>Make sure that the Permalinks custom setting is correct</li>
</ol>


<p>If you are using Permalinks custom settings make sure that /index.php/ is <strong>not</strong> written in front of your Permalink.</p>

<ol>
<li>Does the server allow the symlinks?</li>
</ol>


<p>Try adding the following code to the top of your .htaccess file:</p>

<pre><code>Options+FollowSymlinks
RewriteEngine on
</code></pre>

<p>These are the checklists i used when trying to fix the issue. Additionally, setting the &lsquo;AllowOverride&rsquo; option in apache2.conf did not work for me but the following worked.</p>

<pre><code>$ sudo vi /etc/apache2/sites-available/default
</code></pre>

<p>change:</p>

<pre><code>&lt;Directory /var/www/&gt;
            Options Indexes FollowSymLinks MultiViews
            AllowOverride None
            Order allow,deny
            allow from all
&lt;/Directory&gt;
</code></pre>

<p>to:</p>

<pre><code>&lt;Directory /var/www/&gt;
            Options Indexes FollowSymLinks MultiViews
            AllowOverride ALL
            Order allow,deny
            allow from all
    &lt;/Directory&gt;
</code></pre>

<p>Restart apache:</p>

<pre><code>$ sudo /etc/init.d/apache2 restart
</code></pre>

<p>Also check your .htaccess file, for some reason my generated .htaccess had the wrong RewriteBase</p>

<p>My folder is called wordpress under /var/www, so i changed the RewriteBase in .htaccess to</p>

<pre><code>RewriteBase /wordpress/
</code></pre>

<p>Lastly, in ubuntu servers, there&rsquo;s an easier way to enable mod_rewrites</p>

<pre><code>$ sudo a2enmod rewrite
$ sudo service apache2 rewrite
</code></pre>

<p>Extracted from:
<a href="http://www.felfelworld.com/2013/02/12/page-not-found-permalink-wordpress/">http://www.felfelworld.com/2013/02/12/page-not-found-permalink-wordpress/</a>
<a href="http://wordpress.org/support/topic/new-installation-of-wp-331-permalinks-dont-work">http://wordpress.org/support/topic/new-installation-of-wp-331-permalinks-dont-work</a></p>
]]></content>
  </entry>
  
</feed>
